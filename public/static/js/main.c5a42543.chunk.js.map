{"version":3,"sources":["routers/PrivateRoute.js","routers/PublicRoute.js","types/types.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginRegisterScreen.js","components/ui/NavBar.js","components/calendar/CalendarEvent.js","helpers/calendar-messages.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/AppRouter.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["PrivateRoute","isAuth","Component","component","rest","props","to","PublicRoute","types","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","events","map","event","end","moment","toDate","start","eventAddNew","type","payload","eventClearActive","eventUpdated","eventDeleted","eventsLoad","login","user","finishChecking","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setvalues","reset","handleInputChange","target","name","value","LoginRegisterScreen","loginEmail","loginPassword","loginValues","handleLoginInputChange","registerName","registerEmail","registerPassword","registerPassword2","registerValues","handleRegisterInputChange","useDispatch","className","onSubmit","e","email","password","preventDefault","a","res","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","NavBar","useSelector","state","auth","onClick","CalendarEvent","title","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowplusone","clone","initEvent","notes","CalendarModal","dateStart","setdateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","modalOpen","ui","activeEvent","calendar","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","startEventAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5a42543.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuth,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props) => (\r\n                ( isAuth )\r\n                    ? (<Component {...props}/>)\r\n                    : (<Redirect to=\"/login\"/>)\r\n            )\r\n\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuth,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props) => (\r\n                ( !isAuth )\r\n                    ? (<Component {...props}/>)\r\n                    : (<Redirect to=\"/\"/>)\r\n            )\r\n\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","\r\n//Nombres de las acciones a ejecutar \r\nexport const types = {\r\n\r\n    //ui types\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    //calendar types\r\n    startAddNewEvent: '[calendar] Start add new event',\r\n    addNewEvent: '[calendar] Add New Event',\r\n    setActiveEvent: '[calendar] Active Event',\r\n    clearActiveEvent: '[calendar] Clear Active Event',\r\n    updatedEvent: '[calendar] Event Updated',\r\n    deletedEvent: '[calendar] Event Deleted',\r\n    loadedEvents: '[calendar] Loaded events',\r\n    logoutCleanEvents: '[calendar] Clean events',\r\n\r\n    //auth types\r\n    authCheking: '[auth] checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Register',\r\n    authStartTokenRenew: '[auth] Token renew',\r\n    authLogout: '[auth] Logout'\r\n\r\n}","\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n\r\n        return fetch(url);\r\n\r\n    }else{\r\n\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type':'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n\r\n    }else{\r\n\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type':'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n}","import moment from 'moment';\r\n\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(\r\n        (event) => ({\r\n            ...event,\r\n            end: moment(event.end).toDate(),\r\n            start: moment(event.start).toDate()\r\n        })\r\n    );\r\n\r\n}","import Swal from \"sweetalert2\";\r\n\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startEventAddNew = (event) => {\r\n    return async(dispatch, getState) => {\r\n        const {uid, name} = getState().auth;\r\n        \r\n        try {\r\n\r\n            const res = await fetchWithToken('events/create/', event, 'POST');\r\n            const body = await res.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                \r\n                dispatch( eventAddNew(event) );\r\n            }\r\n\r\n        } catch (err) {\r\n\r\n            console.log(err);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.addNewEvent,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.setActiveEvent,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActive = () => ({\r\n    type: types.clearActiveEvent\r\n})\r\n\r\nexport const startEventUpdate = (event) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            \r\n            const res = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await res.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventUpdated(event) );\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.updatedEvent,\r\n    payload: event\r\n})\r\n\r\nexport const startEventDelete = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {activeEvent} = getState().calendar;\r\n\r\n        try {\r\n            \r\n            const res = await fetchWithToken(`events/delete/${activeEvent.id}`, {}, 'DELETE');\r\n            const body = await res.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventDeleted() );\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const eventDeleted = () => ({\r\n    type: types.deletedEvent\r\n})\r\n\r\nexport const startEventsLoad = () => {\r\n    return async(dispatch) => {\r\n\r\n        const res = await fetchWithToken('events/');\r\n        const body = await res.json();\r\n\r\n        if (body.ok) {\r\n\r\n            const events = prepareEvents(body.events); \r\n\r\n            dispatch(eventsLoad(events));\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventsLoad = (events) => ({\r\n    type: types.loadedEvents,\r\n    payload: events\r\n});\r\n\r\nexport const eventsClean = () => ({\r\n    type: types.logoutCleanEvents\r\n})","import Swal from 'sweetalert2';\r\n\r\nimport { types } from '../types/types';\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { eventsClean } from './events';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return async(dispatch) => {\r\n\r\n        const res = await fetchWithoutToken('auth/', {email, password}, 'POST');\r\n        const body = await res.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }else{\r\n            Swal.fire('Error ', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const login = (user) => ({\r\n\r\n    type: types.authLogin,\r\n    payload: user\r\n\r\n});\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async(dispatch) => {\r\n\r\n        const res = await fetchWithoutToken('auth/register/', {name, email, password}, 'POST');\r\n        const body = await res.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }else{\r\n            Swal.fire('Error ', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        //fetchWithToken\r\n        const res = await fetchWithToken('auth/renew/');\r\n        const body = await res.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }else{\r\n            dispatch( finishChecking() );\r\n        }\r\n\r\n    }\r\n}\r\nexport const finishChecking = () => ({\r\n    type: types.authCheking\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n        dispatch(eventsClean());\r\n\r\n    }\r\n};\r\n\r\nexport const logout = () => ({\r\n    type: types.authLogout\r\n});","import { useState } from \"react\";\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setvalues] = useState( initialState );\r\n\r\n    const reset = () => {\r\n        setvalues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setvalues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLoginEmailPassword, startRegister } from '../../actions/auth';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './loginRegister.css';\r\n\r\nexport const LoginRegisterScreen = () => {\r\n\r\n    const [loginValues, handleLoginInputChange] = useForm({\r\n        loginEmail: '',\r\n        loginPassword: ''\r\n    });\r\n\r\n    const [registerValues, handleRegisterInputChange] = useForm({\r\n        registerName: '',\r\n        registerEmail: '',\r\n        registerPassword: '',\r\n        registerPassword2: ''\r\n    });\r\n\r\n    const {loginEmail, loginPassword} = loginValues;\r\n    const {registerName, registerEmail, registerPassword, registerPassword2} = registerValues;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLoginSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        dispatch( startLoginEmailPassword(loginEmail, loginPassword) );\r\n\r\n    }\r\n\r\n    const handleRegisterSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (registerPassword !== registerPassword2) {\r\n            \r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n\r\n        }\r\n        \r\n        dispatch(startRegister(registerEmail, registerPassword, registerName));\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLoginSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"loginEmail\"\r\n                                value={loginEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"loginPassword\"\r\n                                value={loginPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegisterSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"registerName\"\r\n                                value={registerName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"registerEmail\"\r\n                                value={registerEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"registerPassword\"\r\n                                value={registerPassword}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"registerPassword2\"\r\n                                value={registerPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n\r\n        dispatch(startLogout());\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            \r\n            <button \r\n                className=\"btn btn-outline-warning\"\r\n                onClick={handleLogout}\r\n            >\r\n\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Cerrar sesion</span>\r\n                \r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span> -{user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","//Documentacion react-modal https://www.npmjs.com/package/react-modal\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\nimport moment from 'moment';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActive, startEventAddNew, startEventUpdate } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n  \r\nModal.setAppElement('#root');\r\n\r\n//Valor (fecha inicial) inicial de el componente datePicker\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowplusone = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowplusone.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    //State de los campos de fecha, \"Picker\"\r\n    const [dateStart, setdateStart] = useState( now.toDate() );\r\n    const [dateEnd, setDateEnd] = useState( nowplusone.toDate() );\r\n\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    //Tambien podria utilizar mi hook useForm pero es para no perder practica sobre como funciona\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {title, notes, start, end} = formValues;\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        }else{\r\n            setFormValues(initEvent);\r\n        }\r\n\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        //Convertimos nuestras fechas de javascript en instancias de moment para trabajar con ellas\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        //Si la fecha inicial es igual o posterior a la fecha final....\r\n        if ( momentStart.isSameOrAfter(momentEnd) ) {\r\n            Swal.fire('Error','La fecha fin debe ser posterior a la fecha de inicio', 'error');\r\n            return;\r\n        }\r\n\r\n        if ( title.trim().length < 2 ) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        //Aqui falta grabar en la bd\r\n        if (activeEvent) {\r\n\r\n            dispatch( startEventUpdate(formValues) );\r\n            \r\n        } else {\r\n\r\n            dispatch( startEventAddNew(formValues) );\r\n            \r\n        }\r\n        \r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch( eventClearActive() );\r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setdateStart(e);\r\n        \r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n    \r\n\r\n    return (\r\n        \r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n\r\n            <h1>{ activeEvent ? 'Editar evento' : 'Nuevo evento' }</h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        className=\"form-control\"\r\n                        minDate={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !titleValid && 'is-invalid' }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick= {handleDelete}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { startEventDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startEventDelete() );\r\n    }\r\n\r\n    return (\r\n\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar evento</span>\r\n        </button>\r\n        \r\n    )\r\n}\r\n","//Documentacion react-big-calendar https://www.npmjs.com/package/react-modal\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { messages } from '../../helpers/calendar-messages';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActive, eventSetActive, startEventsLoad } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( startEventsLoad() );\r\n\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive(e) );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        \r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    \r\n    }\r\n\r\n\r\n    // Si seleccionamos cualquier espacio de el calendario sin eventos, quitamos el activeEvent !\r\n    const onSelectSlot = (e) => {\r\n        \r\n        dispatch( eventClearActive() );\r\n\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return{\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onSelectSlot= {onSelectSlot}\r\n                selectable={true}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginRegisterScreen } from '../components/auth/LoginRegisterScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(startChecking());\r\n\r\n    }, [dispatch])\r\n\r\n    if(checking){\r\n        return <div\r\n            className=\"loader-div\"\r\n        >\r\n            <h3>Por favor espere...</h3>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={LoginRegisterScreen} \r\n                        isAuth={!!uid}\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={CalendarScreen } \r\n                        isAuth={!!uid}    \r\n                    />\r\n\r\n                    <Redirect to=\"/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Graduacion SENA',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Terminar el curso yaaaaa!',\r\n//     user:{\r\n//         _id: '123',\r\n//         name: 'Alejandro'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.setActiveEvent:\r\n\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.clearActiveEvent:\r\n\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.addNewEvent:\r\n\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events, \r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.updatedEvent:\r\n\r\n        return {\r\n            ...state,\r\n            events: state.events.map(\r\n                (event) => (event.id === action.payload.id) ? action.payload : event\r\n            )\r\n        }\r\n\r\n        case types.deletedEvent:\r\n\r\n        return {\r\n            ...state,\r\n            events: state.events.filter(\r\n                event => (event.id !== state.activeEvent.id)\r\n            ),\r\n            activeEvent: null\r\n        }\r\n\r\n        case types.loadedEvents:\r\n\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.logoutCleanEvents:\r\n\r\n        return {\r\n            ...initialState\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            \r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n\r\n        case types.uiCloseModal:\r\n        \r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.authLogin:\r\n\r\n            return { \r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n                \r\n            }\r\n        \r\n            case types.authCheking:\r\n\r\n                return {\r\n                    ...state,\r\n                    checking: false\r\n                }\r\n\r\n            case types.authLogout:\r\n\r\n                return {\r\n                    checking: false\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {combineReducers} from 'redux';\r\n\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport reactDom from 'react-dom';\r\n\r\nimport { CalendarApp } from './CalendarApp';\r\nimport './styles.css';\r\n\r\nreactDom.render(\r\n    <CalendarApp />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}